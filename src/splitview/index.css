@import '../commons/index.css';

/* topdoc
{{ splitview/splitview-horizontal.yml }}
*/
/* topdoc
{{ splitview/splitview-horizontal-resizable.yml }}
*/
/* topdoc
{{ splitview/splitview-vertical-resizable.yml }}
*/
/* topdoc
{{ splitview/splitview-horizontal-collapsed-left.yml }}
*/
/* topdoc
{{ splitview/splitview-horizontal-collapsed-right.yml }}
*/
/* topdoc
{{ splitview/splitview-vertical-collapsed-top.yml }}
*/
/* topdoc
{{ splitview/splitview-vertical-collapsed-bottom.yml }}
*/

.spectrum-SplitView {
  display: flex;
  overflow: hidden;
}

.spectrum-SplitView-pane {
  height: 100%;
}

.spectrum-SplitView-gripper {
  content: '';
  display: block;
  position: absolute;
  border-style: solid;
  border-radius: var(--spectrum-rail-gripper-border-radius);

  top: 50%;
  transform: translate(0, -50%);

  /* half of (width + horizontal border - handle width) * -1 (for negative opposite) */
  left: calc(((var(--spectrum-rail-gripper-width) + (2 * var(--spectrum-rail-gripper-border-width-horizontal)) - var(--spectrum-rail-handle-width)) / 2) * -1);
  width: var(--spectrum-rail-gripper-width);
  height: var(--spectrum-rail-gripper-height);
  border-width: var(--spectrum-rail-gripper-border-width-vertical) var(--spectrum-rail-gripper-border-width-horizontal);
}

.spectrum-SplitView-splitter {
  /* Contain the gripper */
  position: relative;

  /* Prevent text selection while dragging */
  user-select: none;

  width: var(--spectrum-rail-handle-width);
  height: 100%;

  &.is-collapsed-start,
  &.is-collapsed-end {
    .spectrum-SplitView-gripper {
      /* make the center line of the gripper */
      &:before {
        content: '';
        position: absolute;

        top: 0;
        left: calc(50% - calc(var(--spectrum-rail-handle-width) / 2));
        width: var(--spectrum-rail-handle-width);
        height: 100%;
      }
    }
  }

  &.is-collapsed-start {
    .spectrum-SplitView-gripper {
      left: 0;
    }
  }

  &.is-collapsed-end {
    .spectrum-SplitView-gripper {
      right: 0;
      left: auto;
    }
  }
}

.spectrum-SplitView--vertical {
  flex-direction: column;

  .spectrum-SplitView-pane {
    height: auto;
    width: 100%;
  }

  .spectrum-SplitView-gripper {
    /* half of (height + vertical border - handle width) * -1 (for negative opposite) */
    top: calc(((var(--spectrum-rail-gripper-width) + (2 * var(--spectrum-rail-gripper-border-width-horizontal)) - var(--spectrum-rail-handle-width)) / 2) * -1);

    transform: translate(-50%, 0);
    left: 50%;
    width: var(--spectrum-rail-gripper-height); /* same as default height */
    height: var(--spectrum-rail-gripper-width); /* same as default width */

    /* opposite of default border-width */
    border-width: var(--spectrum-rail-gripper-border-width-horizontal) var(--spectrum-rail-gripper-border-width-vertical);
  }

  .spectrum-SplitView-splitter {
    width: 100%;
    height: var(--spectrum-rail-handle-width);

    &.is-collapsed-start,
    &.is-collapsed-end {
      .spectrum-SplitView-gripper {
        left: 50%;

        /* make the center line of the gripper */
        &:before {
          top: calc(50% - calc(var(--spectrum-rail-handle-width) / 2));
          left: 0;
          width: 100%;
          height: var(--spectrum-rail-handle-width);
        }
      }
    }

    &.is-collapsed-start {
      .spectrum-SplitView-gripper {
        top: 0;
      }
    }

    &.is-collapsed-end {
      .spectrum-SplitView-gripper {
        top: auto;
        bottom: 0;
      }
    }
  }
}