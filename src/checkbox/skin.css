.spectrum-Checkbox-label {
  color: var(--spectrum-checkbox-text-color-default);
}

.spectrum-Checkbox-checkmark,
.spectrum-Checkbox-partialCheckmark {
  color: var(--spectrum-checkbox-checkmark-color);
}

.spectrum-Checkbox-box {
  border-color: var(--spectrum-checkbox-box-border-color-default);
  background-color: var(--spectrum-checkbox-box-background-color-default);
}

/* Indetermiate is basically a checked state, so handle colors for checked state here */
.spectrum-Checkbox.is-indeterminate .spectrum-Checkbox-box,
.spectrum-Checkbox-input:checked + .spectrum-Checkbox-box {
  border-color: var(--spectrum-checkbox-box-border-color-selected);
}

.spectrum-Checkbox:hover {
  &.is-indeterminate .spectrum-Checkbox-box,
  .spectrum-Checkbox-input:checked + .spectrum-Checkbox-box {
    border-color: var(--spectrum-checkbox-box-border-color-selected-hover);

  }
}

.spectrum-Checkbox:active {
  &.is-indeterminate .spectrum-Checkbox-box,
  .spectrum-Checkbox-input:checked + .spectrum-Checkbox-box {
    border-color: var(--spectrum-checkbox-box-border-color-selected-down);

  }
}

/* topdoc
{{ checkbox/checkbox-default.yml }}
*/
.spectrum-Checkbox {
  border-color: var(--spectrum-checkbox-box-border-color-default);

  &:hover {
    .spectrum-Checkbox-box {
      border-color: var(--spectrum-checkbox-box-border-color-hover);

      box-shadow: none;
    }
    .spectrum-Checkbox-label {
      color: var(--spectrum-checkbox-text-color-hover);
    }
  }

  &:active {
    .spectrum-Checkbox-box {
      border-color: var(--spectrum-checkbox-box-border-color-down);

    }
    .spectrum-Checkbox-label {
      color: var(--spectrum-checkbox-text-color-down);
    }
  }

/* topdoc
{{ checkbox/checkbox-error.yml }}
*/
  &.is-invalid {
    /* Extra-specific selectors added here to handle checked state */
    .spectrum-Checkbox-input:checked + .spectrum-Checkbox-box,
    .spectrum-Checkbox-box {
      border-color: var(--spectrum-checkbox-box-border-color-error);
    }

    .spectrum-Checkbox-label {
      color: var(--spectrum-checkbox-text-color-error);
    }
  }

  &.is-invalid:hover {
    .spectrum-Checkbox-input:checked + .spectrum-Checkbox-box,
    .spectrum-Checkbox-box {
      border-color: var(--spectrum-checkbox-box-border-color-error-hover);
    }

    .spectrum-Checkbox-label {
      color: var(--spectrum-checkbox-text-color-error-hover);
    }
  }

  &.is-invalid:active {
    .spectrum-Checkbox-input:checked + .spectrum-Checkbox-box,
    .spectrum-Checkbox-box {
      border-color: var(--spectrum-checkbox-box-border-color-error-down);
    }

    .spectrum-Checkbox-label {
      color: var(--spectrum-checkbox-text-color-error-down);
    }
  }
}

.spectrum-Checkbox-input {
/* topdoc
{{ checkbox/checkbox-disabled.yml }}
*/
  &:disabled + .spectrum-Checkbox-box {
    /* Use important to override hover states */
    border-color: var(--spectrum-checkbox-box-border-color-disabled) !important;

    background-color: var(--spectrum-checkbox-box-background-color-disabled);
  }

  &:disabled ~ .spectrum-Checkbox-label {
    color: var(--spectrum-checkbox-text-color-disabled);
  }
}

/* Focus */
.spectrum-Checkbox-input {
  &:focus-ring + .spectrum-Checkbox-box {
    /* Since the specificity of .focus-ring is less than :hover, we need important */
    border-color: var(--spectrum-checkbox-box-border-color-key-focus) !important;

    box-shadow: 0 0 0 1px var(--spectrum-checkbox-box-border-color-key-focus) !important;
  }

  &:focus-ring ~ .spectrum-Checkbox-label {
    color: var(--spectrum-checkbox-text-color-key-focus) !important;
  }
}
