@import '../commons/index.css';

/* https://git.corp.adobe.com/Spectrum/spectrum-origins/pull/60 */
:root {
  --spectrum-accordion-icon-width: 6px;
  --spectrum-accordion-icon-height: 10px;

  /* Subtract the size of the border since it's on the item itself */
  --spectrum-accordion-header-height: calc(var(--spectrum-accordion-item-height) - var(--spectrum-accordion-item-border-size));
  --spectrum-accordion-item-header-tracking: calc(var(--spectrum-accordion-item-header-tracking) / 100);
}

/* topdoc
{{ accordion/accordion-default.yml }}
*/
.spectrum-Accordion {
  display: block;
  list-style: none;
  padding: 0;
  margin: 0;
}

.spectrum-Accordion-indicator {
  display: block;
  width: var(--spectrum-accordion-icon-width);
  height: var(--spectrum-accordion-icon-height);

  position: absolute;
  left: var(--spectrum-accordion-icon-spacing);
  top: calc(var(--spectrum-accordion-header-height) / 2 - var(--spectrum-accordion-icon-height) / 2);

  transition: transform ease var(--spectrum-transition-time);
}

.spectrum-Accordion-item {
  z-index: inherit;
  position: relative;

  display: list-item;
  margin: 0;

  border-bottom: var(--spectrum-accordion-item-border-size) solid transparent;

  &:first-of-type {
    border-top: var(--spectrum-accordion-item-border-size) solid transparent;
  }
}

.spectrum-Accordion-header {
  position: relative;

  box-sizing: border-box;
  /* left padding takes into account the icon's size as well as the focus state's left border */
  padding: 0 var(--spectrum-accordion-item-padding) 0 calc(calc(var(--spectrum-accordion-item-padding) * 2) + 2px);
  margin: 0;

  height: var(--spectrum-accordion-header-height);

  font-size: var(--spectrum-accordion-item-header-font-size);
  text-transform: uppercase;
  line-height: var(--spectrum-accordion-header-height);
  letter-spacing: var(--spectrum-accordion-item-header-tracking);

  text-overflow: ellipsis;
  cursor: pointer;
  font-weight: 500;

  &:focus {
    outline: none;

    &::after {
      content: '';

      position: absolute;
      left: 0;
      top: -var(--spectrum-accordion-item-border-size);

      height: calc(var(--spectrum-accordion-item-height) + var(--spectrum-accordion-item-border-size));
      width: var(--spectrum-accordion-item-focus-border-size);
    }
  }
}

.spectrum-Accordion-content {
  padding: 0 var(--spectrum-accordion-item-content-padding) var(--spectrum-accordion-item-content-padding) var(--spectrum-accordion-item-content-padding);
  display: none;
}

.spectrum-Accordion-item {
  &.is-open {
    .spectrum-Accordion-indicator {
      transform: rotate(90deg);
    }

    .spectrum-Accordion-header::after {
      /* No bottom border when open, so be less tall */
      height: var(--spectrum-accordion-item-height);
    }

    .spectrum-Accordion-content {
      display: block;
    }
  }

  &.is-disabled {
    .spectrum-Accordion-header {
      cursor: default;
    }
  }
}
